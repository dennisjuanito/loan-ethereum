{"version":3,"file":"static/webpack/static/development/pages/index.js.ffd886b942b6c6704309.hot-update.js","sources":["webpack:///./utils/getWeb3.js"],"sourcesContent":["import Web3 from 'web3';\nimport getConfig from 'next/config';\n\ndebugger;\nconst getWeb3 = async () => {\n    if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n        if (window.ethereum) {\n            // Modern dapp browsers...\n            const web3 = new Web3(window.ethereum);\n            try {\n                // Request account access if needed\n                await window.ethereum.enable();\n                // Acccounts now exposed\n                return web3;\n            } catch (error) {\n                throw error;\n            }\n        } else if (window.web3) {\n            // Legacy dapp browsers\n            // Use Mist/MetaMask's provider.\n            const web3 = window.web3;\n            console.log('Injected web3 detected.');\n            return web3;\n        }\n        debugger;\n    } else {\n        // Fallback to localhost; use dev console port by default...\n        if (process.env.NODE_ENV === 'development') {\n            const provider = new Web3.providers.HttpProvider('http://localhost:8545');\n            const web3 = new Web3(provider);\n            console.log('No web3 instance injected, using Local web3.');\n            return web3;\n        } else {\n            const {publicRuntimeConfig} = getConfig();\n            const {RINKEBY_API} = publicRuntimeConfig;\n            const provider = new Web3.providers.HttpProvider(`rinkeby.infura.io/v3/${RINKEBY_API}`);\n            const web3 = new Web3(provider);\n            return web3;\n        }\n    }\n};\nexport default getWeb3;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AAjBA;AACA;AADA;AAoBA;AApBA;AAAA;AACA;AADA;AAAA;AACA;AAuBA;AACA;AACA;AA1BA;AACA;AADA;AAAA;AA8BA;AACA;AACA;AAhCA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAoCA;;;;A","sourceRoot":""}