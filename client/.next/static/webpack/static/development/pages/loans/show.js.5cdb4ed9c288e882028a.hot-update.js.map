{"version":3,"file":"static/webpack/static/development/pages/loans/show.js.5cdb4ed9c288e882028a.hot-update.js","sources":["webpack:///./components/RepaymentsRow.js"],"sourcesContent":["import React from 'react';\nimport Table from 'semantic-ui-react/dist/commonjs/collections/Table/Table';\nimport {Button, Icon} from 'semantic-ui-react';\nimport getWeb3 from '../utils/getWeb3';\nimport Loan from '../utils/loan';\n\nconst {Row, Cell} = Table;\n\nexport default ({\n    loanContractAddress,\n    month,\n    balance,\n    date,\n    interest,\n    monthToIsPaid,\n    payment,\n    principal,\n    loading,\n    handleLoadingChange,\n    handleMonthToIsPaidChange\n}) => {\n    return (\n        <Row\n            positive={+principal !== 0 && monthToIsPaid && +month !== 0}\n            negative={+principal !== 0 && !monthToIsPaid && +month !== 0}\n        >\n            <Cell>{month}</Cell>\n            <Cell>{date}</Cell>\n            <Cell>{balance}</Cell>\n            <Cell>{payment}</Cell>\n            <Cell>{interest}</Cell>\n            <Cell>{principal}</Cell>\n            <Cell>\n                {+principal === 0 ? (\n                    ''\n                ) : monthToIsPaid ? (\n                    <Icon name='checkmark' />\n                ) : (\n                    <Icon name='close' />\n                )}\n                {+principal === 0 ? 'None' : monthToIsPaid ? 'Paid' : 'Unpaid'}\n            </Cell>\n            <Cell>\n                {+principal === 0 ? (\n                    ''\n                ) : monthToIsPaid && +month !== 0 ? (\n                    <Button\n                        fluid\n                        basic\n                        color='red'\n                        onClick={async () => {\n                            try {\n                                const loan = await Loan(loanContractAddress);\n                                const web3 = await getWeb3();\n                                const accounts = await web3.eth.getAccounts();\n\n                                await loan.methods.markRePaymentAsUnPaid(+month).send({\n                                    from: accounts[0]\n                                });\n                                await handleMonthToIsPaidChange();\n                            } catch (err) {\n                                throw err;\n                            }\n                        }}\n                    >\n                        Mark as Unpaid\n                    </Button>\n                ) : !monthToIsPaid && +month !== 0 ? (\n                    <Button\n                        fluid\n                        basic\n                        color='green'\n                        loading={loading}\n                        onClick={async () => {\n                            try {\n                                await handleLoadingChange(true, month);\n                                const loan = await Loan(loanContractAddress);\n                                const web3 = await getWeb3();\n                                const accounts = await web3.eth.getAccounts();\n\n                                await loan.methods.markRePaymentAsPaid(+month).send({\n                                    from: accounts[0]\n                                });\n                                await handleMonthToIsPaidChange();\n                                await handleLoadingChange(false, month);\n                            } catch (err) {\n                                throw err;\n                            }\n                        }}\n                    >\n                        Mark as Paid\n                    </Button>\n                ) : (\n                    ''\n                )}\n            </Cell>\n        </Row>\n    );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAcA;AAAA;AAEA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AAOA;AADA;AACA;AAPA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAuBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AAQA;AADA;AACA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AA8BA;;;;A","sourceRoot":""}