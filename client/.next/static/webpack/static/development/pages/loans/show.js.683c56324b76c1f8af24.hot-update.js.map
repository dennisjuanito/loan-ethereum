{"version":3,"file":"static/webpack/static/development/pages/loans/show.js.683c56324b76c1f8af24.hot-update.js","sources":["webpack:///./pages/loans/show.js"],"sourcesContent":["import React, {Component} from 'react';\nimport {Table, Card, Grid, CardContent} from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport RePaymentRow from '../../components/RepaymentsRow';\nimport Loan from '../../utils/loan';\n\nexport default class Show extends Component {\n    state = {\n        rePayments: [],\n        loanTitle: '',\n        lenderAddress: '',\n        borrowerAddress: '',\n        loanContractAddress: '',\n        loading: false\n    };\n    static async getInitialProps(props) {\n        const loanContractAddress = props.query.address;\n        const loan = await Loan(loanContractAddress);\n        const rePaymentsCount = await loan.methods.getRepaymentsCount().call();\n        const loanTitle = await loan.methods.loanTitle().call();\n        let lenderAddress = await loan.methods.lender().call();\n        let borrowerAddress = await loan.methods.borrower().call();\n        const rePayments = await Promise.all(\n            Array(parseInt(rePaymentsCount))\n                .fill()\n                .map((element, index) => {\n                    return loan.methods.rePayments(index).call();\n                })\n        );\n\n        return {rePayments, loanTitle, lenderAddress, borrowerAddress, loanContractAddress};\n    }\n\n    componentDidMount = async () => {\n        await this.setState({\n            rePayments: this.props.rePayments,\n            loanTitle: this.props.loanTitle,\n            lenderAddress: this.props.lenderAddress,\n            borrowerAddress: this.props.borrowerAddress,\n            loanContractAddress: this.props.loanContractAddress\n        });\n    };\n\n    renderRows = () => {\n        return this.state.rePayments.map((rePayment, index) => {\n            return (\n                <RePaymentRow\n                    key={index}\n                    month={index}\n                    loanContractAddress={this.state.loanContractAddress}\n                    loading={this.state.loading}\n                    handleLoadingChange={this.handleLoadingChange}\n                    {...rePayment}\n                />\n            );\n        });\n    };\n\n    handleLoadingChange = val => {\n        this.setState({\n            loading: val\n        });\n    };\n\n    handleMonthToIsPaidChange = () => {\n        this.setState({\n            rePayments: this.props.rePayments\n        });\n    };\n\n    render() {\n        const {Header, Row, HeaderCell, Body} = Table;\n        return (\n            <Layout>\n                <Card fluid>\n                    <Card.Content textAlign='center'>\n                        <Card.Header>{this.state.loanTitle}</Card.Header>\n                        <Card.Meta>{this.state.loanContractAddress}</Card.Meta>\n                        <Card.Description>Lender: {this.state.lenderAddress}</Card.Description>\n                        <Card.Description>Borrower: {this.state.borrowerAddress}</Card.Description>\n                    </Card.Content>\n                </Card>\n                <Table celled>\n                    <Header>\n                        <Row>\n                            <HeaderCell>Month</HeaderCell>\n                            <HeaderCell>Date</HeaderCell>\n                            <HeaderCell>Balance</HeaderCell>\n                            <HeaderCell>Payment</HeaderCell>\n                            <HeaderCell>Interest</HeaderCell>\n                            <HeaderCell>Principal</HeaderCell>\n                            <HeaderCell>Status</HeaderCell>\n                            <HeaderCell />\n                        </Row>\n                    </Header>\n                    <Body>{this.renderRows()}</Body>\n                </Table>\n            </Layout>\n        );\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;;;;;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AAOA;AAAA;AAiBA;;;;;;AApFA;;;;;;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AAIA;AACA;AACA;;AANA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAzBA;AACA;;;;;A","sourceRoot":""}