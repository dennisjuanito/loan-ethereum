{"version":3,"file":"static/webpack/static/development/pages/index.js.3e535d10981fac4daf9a.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, {Component} from 'react';\nimport LoanFactory from '../contracts/LoanFactory.json';\nimport Loan from '../../client/utils/loan';\nimport getWeb3 from '../utils/getWeb3';\nimport Layout from '../components/Layout';\nimport {Card, Grid, Button} from 'semantic-ui-react';\nimport {Link} from '../routes';\n\nclass LoanIndex extends Component {\n    state = {web3: null, accounts: null, contract: null, loans: []};\n\n    static async getInitialProps(props) {\n        // const loan = Loan(props.query.address);\n        let deployedLoanContract;\n        try {\n            const web3 = await getWeb3();\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = LoanFactory.networks[networkId];\n            const loanFactoryInstance = new web3.eth.Contract(LoanFactory.abi, deployedNetwork.address);\n            deployedLoanContract = await loanFactoryInstance.methods.getDeployedLoans().call();\n        } catch (error) {\n            throw error;\n        }\n\n        return {\n            loans: deployedLoanContract\n        };\n    }\n    componentDidMount = async () => {\n        try {\n            const contractArr = await Promise.all(\n                this.props.loans.map(async address => {\n                    const loan = await Loan(address);\n                    let lenderAddress = await loan.methods.lender().call();\n                    let borrowerAddress = await loan.methods.borrower().call();\n                    let contractAddress = await loan._address;\n                    return {lenderAddress, borrowerAddress, contractAddress};\n                })\n            );\n            await this.setState({loans: contractArr});\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    renderLoans = () => {\n        return this.state.loans.map(loan => {\n            return (\n                <Grid.Column>\n                    <Card fluid style={{marginTop: '28px'}}>\n                        <Card.Content>\n                            <Card.Header>Loan Title</Card.Header>\n                            <Card.Meta>{loan.contractAddress}</Card.Meta>\n                            <Card.Description>Lender: {loan.lenderAddress}</Card.Description>\n                            <Card.Description>Borrower: {loan.borrowerAddress}</Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <Link route={`/loans/${loan.contractAddress}`}>\n                                <Button basic color='blue' fluid>\n                                    View\n                                </Button>\n                            </Link>\n                        </Card.Content>\n                    </Card>\n                </Grid.Column>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <Layout>\n                <Grid>\n                    <Grid.Row columns={3}>{this.renderLoans()} </Grid.Row>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default LoanIndex;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAKA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAJA;AAEA;AAFA;AAAA;AAWA;AAAA;AACA;AAZA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;AACA;AACA;AAGA;AAAA;AAIA;;;;;;AAlEA;;;;;;;;AAIA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;;AACA;AACA;;AADA;;;;;;;;;;AAKA;AACA;AADA;AACA;;;;;;;;;;;;;;;;AAjBA;AACA;AAuEA;;;;A","sourceRoot":""}